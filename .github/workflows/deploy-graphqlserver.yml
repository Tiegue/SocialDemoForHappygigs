name: Backend CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  backend:
    name: Build & Test Spring Boot App
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.8
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: socialdemo
          POSTGRES_USER: social
          POSTGRES_PASSWORD: social
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

#      Kraft mode is not ok for Actions
      zookeeper:
        image: zookeeper:latest
        ports:
          - 2181:2181

      kafka:
        image: bitnami/kafka:latest
        ports:
          - 9092:9092
        env:
          KAFKA_KRAFT_MODE: "no"
#          KAFKA_CFG_PROCESS_ROLES: "broker,controller"
#          KAFKA_CFG_NODE_ID: "1"
#          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_BROKER_ID: 1
          ALLOW_PLAINTEXT_LISTENER: yes
        options: >-
          --health-cmd="bash -c 'echo > /dev/tcp/localhost/9092'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=5

    defaults:
      run:
        working-directory: graphqlserver

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Wait for Services
        run: |
          for i in {1..20}; do
            echo "⏳ Waiting for PostgreSQL..."; pg_isready -h localhost -p 5432 && break || sleep 3
          done

          for i in {1..20}; do
            echo "⏳ Waiting for Kafka..."; timeout 3 bash -c "echo > /dev/tcp/localhost/9092" && break || sleep 3
          done

          for i in {1..20}; do
            echo "⏳ Waiting for Redis..."; redis-cli -h localhost ping && break || sleep 3
          done

      - name: Run Tests with Maven
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/socialdemo
          SPRING_DATASOURCE_USERNAME: social
          SPRING_DATASOURCE_PASSWORD: social
          SPRING_REDIS_HOST: localhost
          SPRING_KAFKA_BOOTSTRAP_SERVERS: localhost:9092
        run: mvn clean verify
#
#      This version in kraft mode backup
#      kafka:
#        image: bitnami/kafka:latest
#        ports:
#          - 9092:9092
#        env:
#          KAFKA_KRAFT_MODE: "yes"
#          KAFKA_CFG_PROCESS_ROLES: "broker,controller"
#          KAFKA_CFG_NODE_ID: "1"
#          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
#          KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
#          KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
#          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
#          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
#          KAFKA_CFG_LOG_DIRS: "/bitnami/kafka/data"
#          ALLOW_PLAINTEXT_LISTENER: "yes"
#        options: >-
#          --health-cmd="curl --silent --fail localhost:9092 || exit 1"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=10